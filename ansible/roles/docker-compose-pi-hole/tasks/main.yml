- name: Create a directory for the pihole service
  ansible.builtin.file:
    path: /opt/pihole
    state: directory

- name: Copy Files which are defining the service
  ansible.builtin.file:
    path: "/opt/pihole/{{item}}"
    state: directory
  loop:
    - pihole
    - pihole/etc
    - autorestic
    - autorestic/cron

- name: Templating Environment
  ansible.builtin.template:
    src: env.j2
    dest: /opt/pihole/.env

- name: Copy dnsmasq
  ansible.builtin.copy:
    src: etc/dnsmasq.d/01-pihole.conf
    dest: /opt/pihole/pihole/etc

- name: Copy cron definition
  ansible.builtin.copy:
    src: cron
    dest: /opt/pihole/autorestic/

- name: Template Autorestic Config
  ansible.builtin.template:
    src: config.yml.j2
    dest: /opt/pihole/autorestic/config.yml


- name: Copy docker-compose.yml to target host
  ansible.builtin.copy:
    src: docker-compose.yml
    dest: /opt/pihole/docker-compose.yml
  register: docker_compose_yaml

- name: Start the pihole service with Docker Compose
  ansible.builtin.command:
    cmd: docker compose up -d
    chdir: /opt/pihole

- name: Pull on change
  when: docker_compose_yaml.changed
  command:
    chdir: /opt/pihole
    cmd: docker compose pull

- name: Restart on change
  when: docker_compose_yaml.changed
  command:
    chdir: /opt/pihole
    cmd: docker compose restart
- name: Wait for DNS-Port
  ansible.builtin.wait_for:
    port: 53
    sleep: 5
- name: Wait for http-Port
  ansible.builtin.wait_for:
    port: 80
    sleep: 5
- name: Wait for https-Port
  ansible.builtin.wait_for:
    port: 443
    sleep: 5
- name: Wait for exporter-Port
  ansible.builtin.wait_for:
    port: 9617
    sleep: 5
# // TODO
#- name: Test DNS
#  ansible.builtin.debug:
#    msg: "Querying localhost for IPv4 address for triantium.de. produces {{ lookup('community.general.dig', 'triantium.de' , fail_on_error=true ) }}"
-
#  https://docs.pi-hole.net/api/auth/
- name: Get Session Token
  uri:
    url: "http://{{ansible_hostname}}/api/auth"
    method: POST
    body_format: json
    body:
      password: "{{ lookup('community.general.passwordstore', 'hosts/' + ansible_hostname +'/pihole') }}"
  register: pihole_session
- name: Debug Session Token
  ansible.builtin.debug:
    msg: "{{ pihole_session }}"

- name: Check Blocking
  uri:
    url: "http://{{ansible_hostname}}/api/dns/blocking"
    method: GET
    headers:
      X-FTL-SID: "{{ pihole_session.json.session.sid }}"
# // TODO fetch Lists, check missing and update
# https://ftl.pi-hole.net/master/docs/#put-/lists/-list-
#  https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
#  https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/light.txt
#- name: Add hagezi List
#  uri:
#    url: "http://{{ansible_hostname}}/api/lists"
#    method: POST
#    headers:
#      X-FTL-SID: "{{ pihole_session.json.session.sid }}"
#    body_format: json
#    body:
#      address: https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/light.txt
#      type: block
#      comment: "Added pi ansible"
#      enabled: true
- name: Update Gravity
  uri:
    url: "http://{{ansible_hostname}}/api/action/gravity"
    method: POST
    headers:
      X-FTL-SID: "{{ pihole_session.json.session.sid }}"
